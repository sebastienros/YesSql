image: Visual Studio 2017
init:
  - git config --global core.autocrlf true
services:
  - mssql2016
  - mysql
  - postgresql96
environment:
  global:
    NUGET_API_KEY:
      secure: EbFVaFfJ7tcKDP2vWGGXkXwOO/3M67hK29MV0gdzbH1zkWWviCv/0cbQZ7crDfUK
install:
  - ps: $env:BuildNumber= $env:APPVEYOR_BUILD_NUMBER
  - ps: $env:DOTNET_SKIP_FIRST_TIME_EXPERIENCE = true
  - ps: $env:NUGET_XMLDOC_MODE = "skip"
  - ps: $env:DOTNET_CLI_TELEMETRY_OPTOUT = 1
  - ps: Start-FileDownload 'https://dist.nuget.org/win-x86-commandline/latest/nuget.exe'
build_script:
  - dotnet --version
before_test:
  - SET SQLSERVER_CONNECTION_STRING=Data Source=.;Initial Catalog=tempdb;Integrated Security=True
  - SET MYSQL_CONNECTION_STRING=server=localhost;uid=root;pwd=Password12!;database=yessql;
  - SET POSTGRESQL_CONNECTION_STRING=Server=localhost;Port=5432;Database=yessql;User Id=postgres;Password=Password12!;
  - SET MYSQL_PWD=Password12!
  - PATH=C:\Program Files\MySQL\MySQL Server 5.7\bin;%PATH%
  - mysql -e "create database yessql;" --user=root
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - PATH=C:\Program Files\PostgreSQL\9.6\bin\;%PATH%
  - createdb yessql
test_script:
  - dotnet test .\test\YesSql.Tests\YesSql.Tests.csproj --filter "FullyQualifiedName~YesSql.Tests.SqlServerTests" --configuration Release
  - dotnet test .\test\YesSql.Tests\YesSql.Tests.csproj --filter "FullyQualifiedName~YesSql.Tests.MySqlTests" --configuration Release
  - dotnet test .\test\YesSql.Tests\YesSql.Tests.csproj --filter "FullyQualifiedName~YesSql.Tests.SqliteTests" --configuration Release
  - dotnet test .\test\YesSql.Tests\YesSql.Tests.csproj --filter "FullyQualifiedName~YesSql.Tests.InMemoryTests" --configuration Release
  - dotnet test .\test\YesSql.Tests\YesSql.Tests.csproj --filter "FullyQualifiedName~YesSql.Tests.PostgreSqlTests" --configuration Release
  - dotnet test .\test\YesSql.Tests\YesSql.Tests.csproj --filter "FullyQualifiedName~YesSql.Tests.ProviderTests" --configuration Release
after_test:
  - dotnet pack -c Release
artifacts:
- path: 'src\**\*.nupkg'

deploy_script:
- ps:  if ( ($env:APPVEYOR_REPO_BRANCH -eq "master") -and ($env:APPVEYOR_PULL_REQUEST_NUMBER -eq "") ) { foreach ($artifactName in $artifacts.keys) { nuget push $artifacts[$artifactName] $env:NUGET_API_KEY -Source https://www.nuget.org/api/v2/package } }